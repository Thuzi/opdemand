contents:
  description: Configuration for EC2 Instances
config:
  contents:
    sections:
      ec2-instance:
        name: EC2 Instance
        description: Configuration for EC2 instances
        sort: 8
        fields:
          ec2-instance/region_name:
            name: Region
            description: Name of AWS region
            type: clouds
            default:
            required: true
            sort: 1
            editable: [ none, destroyed ]
            env_key: EC2_REGION_NAME
          ec2-instance/zone_name:
            name: Zone
            description: Name of AWS zone to use
            type: zone
            default:
            required: true
            sort: 2
            editable: [ none, destroyed ]
            env_key: EC2_ZONE_NAME
          ec2-instance/id:
            name: Instance ID
            description: EC2 Instance ID (to use existing instance)
            type: text
            default:
            sort: 3
            editable: [ none, destroyed ]
            env_key: EC2_INSTANCE_ID
          ec2-instance/public_dns_name:
            name: Public DNS Name
            description: Public DNS hostname to access this EC2 Instance
            type: text
            default:
            sort: 4
            editable: [ none, destroyed ]
            env_key: EC2_PUBLIC_DNS
          ec2-instance/private_dns_name:
            name: Private DNS Name
            description: Private DNS hostname to access this EC2 Instance
            type: text
            default:
            sort: 5
            editable: [ none, destroyed ]
            env_key: EC2_PRIVATE_DNS
          ec2-instance/instance_type:
            name: Instance Type
            description: EC2 Instance Type
            type: instance
            default: m1.medium # default to something that starts relatively fast
            required: true
            sort: 6
            editable: [ none, destroyed ]
            env_key: EC2_INSTANCE_TYPE
          ec2-instance/image_id:
            name: Image ID
            description: AMI ID (defaults to latest Ubuntu release)
            type: text
            default:
            sort: 7
            editable: [ none, destroyed ]
          ec2-instance/key_name:
            name: Key Name
            description: Name of Key Pair to use for SSH access
            type: text
            default:
            required: true
            sort: 8
          ec2-instance/security_groups:
            name: Security Groups
            description: List of security groups to restrict inbound access
            type: list
            default: []
            required: true
            sort: 9
          ec2-instance/volumes:
            name: Volumes
            description: List of volumes (EBS & Ephemeral)
            type: list
            default: []
            sort: 10
          ec2-instance/elastic_ip:
            name: Elastic IP
            description: Elastic IP address to use
            type: text
            default:
            sort: 11
          ec2-instance/kernel:
            name: Kernel ID
            description: ID of Kernel to use
            type: text
            default:
            sort: 12
            editable: [ none, destroyed ]
          ec2-instance/user_data:
            name: User Data
            description: User Data to pass to instance on boot
            type: textarea
            sort: 13
            editable: [ none, destroyed ]
            #
            # NOTE: default cloud-init provided to optimize instance build
            #
            default: |
              #cloud-config
              byobu_by_default: false
              manage_etc_hosts: false
              apt_upgrade: true
              # NOTE: called on first boot only
              runcmd:
               # create required directories
               - mkdir -p /var/cache/opdemand
               - chown -R ubuntu:ubuntu /var/cache/opdemand
               # Early install of SSH keys to assist with Puppet/Chef troubleshooting.
               # NOTE: Puppet will typically take over management of these SSH files
               - |
                 cat > /var/cache/opdemand/ssh-bootstrap <<EOF
                 #!/usr/bin/env python
                 import json
                 import re
                 import os
                 import subprocess
                 # setup ssh variables
                 ssh_auth_keys = json.loads(r"""$SSH_AUTHORIZED_KEYS""")
                 ssh_known_hosts = json.loads(r"""$SSH_KNOWN_HOSTS""")
                 ssh_private_key = json.loads(r"""$SSH_PRIVATE_KEY""")
                 # prepare ssh data
                 ssh_data = []
                 try:
                   if ssh_auth_keys:
                     keys = "\n".join(ssh_auth_keys)+"\n"
                     ssh_data.append( ($DEPLOY_USERNAME, "/home/"+$DEPLOY_USERNAME+"/.ssh/authorized_keys", keys) )
                   if ssh_known_hosts:
                     fingerprints = "\n".join(ssh_known_hosts)+"\n"
                     ssh_data.append( ($DEPLOY_USERNAME, "/home/"+$DEPLOY_USERNAME+"/.ssh/known_hosts", fingerprints) )
                     ssh_data.append( ("root", "/root/.ssh/known_hosts", fingerprints) )
                   if ssh_private_key and str(ssh_private_key[0]).find('--BEGIN') > 0:
                       ssh_private_key = ssh_private_key[0]
                       key_type = re.findall("^-----BEGIN (...) PRIVATE KEY", ssh_private_key)[0].lower()
                       ssh_data.append( ($DEPLOY_USERNAME, "/home/"+$DEPLOY_USERNAME+"/.ssh/id_"+key_type, ssh_private_key))
                       ssh_data.append( ("root", "/root/.ssh/id_"+key_type, ssh_private_key))
                 except:
                   pass # write what we have
                 # iterate over ssh data and append it to disk
                 for user, path, data in ssh_data:
                   with open(path, "a") as f:
                     if isinstance(data, list):
                       for d in data:
                         f.write(d)
                     else:
                       f.write(data)
                     subprocess.check_call(["chown", user+":"+user, path])
                     subprocess.check_call(["chmod", "0600", path])
                 EOF
               - chmod +x /var/cache/opdemand/ssh-bootstrap
               - /var/cache/opdemand/ssh-bootstrap               
          ec2-instance/tags:
            name: Tags
            description: User defined tags stored on the EC2 instance
            type: map
            default:
              Name: Instance
            sort: 14
