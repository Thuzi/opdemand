# -*- test-case-name: c2server.tests.platform.PhpMysqlElb2x1Test -*-
name: PHP/MySQL 2x1 with ELB
description: >
             PHP environment consisting of a Key Pair, Security Group, three
             EC2 instances, and a load balancer. Installs the MySQL
             database on one instance and a generic Nginx/FastCGI/PHP configuration on the
             other two. Sets up the load balancer to distribute traffic between
             the two PHP application servers, listening at 80/tcp, powered by a
             configurable GitHub repository.
path: php/mysql/elb2x1
include: [ aws, base, network, server, puppet, database, application ]
config:
  network/access_port: 80
  network/admin_port: 22
  database/username: mysql_user
  database/password: changeme123.
  application/repository_url: git://github.com/opdemand/c2-lamp-php.git
stack:
  - name: Security
    description: Provides security infrastructure
    include: [ ]
    components:
      - type: aws-keypair
        include: [ ]
  - name: Network
    description: Provides network infrastructure
    include: [ ]
    components:
      - type: aws-sg
        include: [ network ]
  - name: Database
    description: Provides database services
    include: [ ]
    components:
      - type: aws-instance
        include: [ aws, network, server, puppet, database ]
        name: MySQL
        config:
          server/hostname: db
          server/build_script: build.sh
          server/deploy_script: deploy.db.sh
        output:
          database/host: public_dns_name
    monitor:
      protocol: tcp
      port: 3306
  - name: Application
    description: Provides database services
    include: [ ]
    components:
      - type: aws-instance
        include: [ aws, network, server, puppet, application ]
        name: PHP 1
        config:
          server/hostname: php1
          server/build_script: build.sh
          server/deploy_script: deploy.app.sh
        output:
          lb/instances: [ instance_id ]
          application/host: public_dns_name
      - type: aws-instance
        include: [ aws, network, server, puppet, application ]
        name: PHP 2
        config:
          server/hostname: php2
          server/build_script: build.sh
          server/deploy_script: deploy.app.sh
        output:
          lb/instances: [ instance_id ]
    monitor:
      protocol: tcp
      port: 80
  - name: Load Balancing
    description: Provides load balancing services
    include: [ ] 
    components:
      - type: aws-elb
        include: [ ] 
        name: ELB
        config:
          lb/listeners: [ "(80, 80, TCP)" ]
          lb/target: HTTP:80/
        output:
          network/access_host: dns_name
          network/admin_host: dns_name
    monitor:
      protocol: tcp
      port: 80
      target: dns_name
publish:
  - name: Access URL
    description: URL used to access this service
    template: http://%(network/access_host)s
  - name: Database Admin URL
    description: URL used to access the database service
    template: ssh://ubuntu@%(database/host)s
  - name: Application Admin URL
    description: URL used to administer the application service
    template: ssh://ubuntu@%(application/host)s
