name: Base x 2
description: |
  Base application stack that includes an Elastic Load Balancer, 2 EC2 Instances, a Security Group and Key Pair.
  Uses a shell scripts to install an example Apache2 web server.
components:
  - component: ec2-elb
    consumes: [ instance1, instance2 ]
    modules:
      publish: [ http ]
  - component: ec2-instance
    id: instance1
    consumes: [ keypair, sg ]
    modules: 
      config: [ ec2-deploy, ssh ]
    configure:
      ec2-instance/tags:
        Name: Base App 1
      ec2-deploy/command: |
        source .opdemand
        echo Running $DEPLOY_MECHANISM deploy as $DEPLOY_USERNAME...        
        echo "Waiting for Ubuntu cloud-init to finish"
        while [ ! -z "`ps auxw |grep cloud-init | grep -v grep`" ] ; do
          sleep 1
        done
        echo "Ubuntu cloud-init complete, continuing initial instance build..."        
        sudo apt-get update
        sudo apt-get install -yq apache2
        echo "##########################################################################"
  - component: ec2-instance
    id: instance2
    consumes: [ keypair, sg ]
    modules: 
      config: [ ec2-deploy, ssh ]
    configure:
      ec2-instance/tags:
        Name: Base App 2
      ec2-deploy/command: |
        source .opdemand
        echo Running $DEPLOY_MECHANISM deploy as $DEPLOY_USERNAME...        
        echo "Waiting for Ubuntu cloud-init to finish"
        while [ ! -z "`ps auxw |grep cloud-init | grep -v grep`" ] ; do
          sleep 1
        done
        echo "Ubuntu cloud-init complete, continuing initial instance build..."        
        sudo apt-get update
        sudo apt-get install -yq apache2
        echo "##########################################################################"
  - component: ec2-sg
    id: sg
    configure:
      ec2-sg/rules: [ "0.0.0.0/0,tcp,22,22", "0.0.0.0/0,tcp,80,80" ]
  - component: ec2-keypair
    id: keypair
